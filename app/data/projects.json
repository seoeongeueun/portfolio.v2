{
	"1": {
		"title": "Minor Questions",
		"subtitle": "ORGD 2024",
		"route": "orgd/",
		"thumbnail": "orgd_main.jpg",
		"tags": ["1 DEV", "PERSONAL", "EXHIBITION"],
		"theme": "#2e2e2e",
		"stacks": ["js", "nextjs2", "socket", "express", "mongodb", "tailwindcss"],
		"ppl_count": 1,
		"contribution_kr": [
			"디자이너가 폰트 사이즈, 색상, 텍스트 위치 등을 수정할 수 있는 커스텀 어드민 패널을 구축하고, 드래그로 텍스트를 자유롭게 옮기고 회전할 수 있는 기능을 만들었습니다. MongoDB를 사용해 데이터 구조를 설계하고 Next.js의 API 라우트를 활용해 관련 API를 개발했습니다.",
			"Socket.io를 사용하여 연결된 기기들 간 실시간으로 유저 액션을 공유하는 소켓 환경을 구축했습니다. 메인 기기는 풀스크린 모드, 연결된 기기는 6배 줌된 뷰를 지정하여 연결된 기기의 현재 스크롤 위치와 화면 배율을 계산하고 소켓 이벤트로 전달하여 메인 기기에 실시간 반영 했습니다.",
			"작품의 실시간 진행도를 계산해 일정 시간 미작동 시 자동으로 대기 화면 전환하거나 진행을 되돌리는 초기화 트리거를 구현했습니다. 또한, 관람객의 적극적인 참여를 유도하기 위해 진행도 100% 달성시 전체 기기에서 애니메이션과 사운드를 트리거 하는 소켓 이벤트를 만들었습니다.",
			"소켓 연결과 이벤트를 처리하는 Express.js 기반 서버를 구축하고, 기기 연결 상태를 관리하고 관리자가 연결을 해지하는 API를 만들어 시스템 효율성을 높이고 관리 기능을 강화했습니다.",
			"JWT 기반 로그인 시스템을 구축하고, middleware를 통해 어드민 페이지 접근 시 토큰을 검증하여 권한을 확인 후 리다이렉트 처리했습니다. 연결 관리, 초기화 등 민감한 요청은 토큰 검증을 수행하여 보안성을 강화했습니다",
			"기획에 참여하여 관람객의 흥미를 갖고 적극적인 참여를 유도할 수 있도록 유저 인터랙션을 설계했습니다. 또한, 전시 관계자가 현장에서 시스템을 쉽게 운영할 수 있도록 관리자 가이드를 작성하고 관련 관리 기능을 개발했습니다."
		],
		"review_kr": [
			"유료 전시인만큼 안정적인 관람을 보장하기 위해, 실시간 소켓 이벤트 처리와 시스템 최적화에 큰 책임감을 가지고 개발에 임하며, 원활한 진행을 위한 최적화 방법과 관람객의 흥미를 끌 수 있는 기능을 고민할 수 있던 경험이었습니다.",
			"관람객, 디자이너, 관리자의 관점에서 필요한 기능을 고민하고 문제를 해결하는 방법을 배우며, 다각적인 사고와 창의적인 접근의 중요성을 깨달았습니다."
		],
		"introduction_kr": [
			"ORGD 2024 《굿 디자이너: 의문》은 그래픽 디자이너의 정체성에 관한 다양한 관점을 제시하는 전시입니다.",
			"디자이너 2명, 기획자 1명, 개발자 1명으로 구성된 유닛 Studio BATON의 개발자로 전시에 참여해 소켓 통신을 활용한 인터렉티브 작품을 개발하였습니다. 전체 개발 프로세스를 단독으로 담당하고 기획에도 참여했습니다."
		],
		"introduction_en": [
			"ORGD 2024 《Good Designer: Query》 is an exhibition that explores various perspectives on the identity of graphic designers.",
			"As the sole developer of the ad-hoc team Studio BATON (2 designers, 1 planner, and 1 developer), I developed a socket-based interactive installation, and also contributed to the planning process as well."
		],
		"contribution_en": [
			"Built a custom admin panel allowing the designers to tweak font sizes, colors, and text positions in real time. Implemented a draggable and rotatable text feature for flexible design control. Designed the data structure using MongoDB and developed related APIs via Next.js API routes.",
			"Set up a real-time socket environment using Socket.io to sync user actions across connected devices. The main device runs in fullscreen mode, while secondary devices get a 6x zoomed-in view. Calculated each device’s scroll position and zoom ratio, sending the data via socket events to be reflected live on the main display.",
			"Created a real-time progress tracker for the site that auto-switched to the loading screen after periods of inactivity or reset the experience as needed. Also implemented a socket-triggered animation and sound event that fired on all devices once the viewer reached 100% progress, encouraging active participation.",
			"Developed an Express.js based server to handle socket connections and events. Added device connection status management and admin-level APIs to disconnect devices, improving both system efficiency and control.",
			"Implemented a JWT-based login system and set up middleware to validate tokens for admin page access. Sensitive requests like connection management and resets were protected through token verification to enhance security.",
			"Collaborated on planning to design user interactions that would keep visitors engaged and involved. Also created admin guides and management tools to help on-site staff easily operate the system."
		],
		"review_en": [
			"Given the paid nature of the exhibition, I focused on building a reliable and engaging system. It was a meaningful experience to explore performance tuning and interactive features that kept visitors interested.",
			"Working through the needs of visitors, designers, and admins helped me understand the value of thinking from different angles and taking a creative approach to problem-solving."
		],
		"links": [
			{"web": "https://github.com/seoeongeueun/orgd.web", "server": "https://github.com/seoeongeueun/orgd.server", "info": "http://orgd.org/2024/"}
		],
		"images": ["orgd0.jpg", "orgd1.jpg", "video2.mp4", "orgd3.png", "orgd5.png", "special.png", "video1.mp4"],
		"dark": true
	},
	"2": {
		"title": "HeyMap",
		"subtitle": "Map for Popups",
		"route": "heymap/",
		"thumbnail": "heymap_main.png",
		"tags": ["WORK", "TEAM", "WEB"],
		"theme": "#f9804c",
		"stacks": ["js", "nextjs2", "express", "postgresql", "tailwindcss"],
		"links": [{"web": "http://map.heypop.kr"}],
		"introduction_kr": [
			"팝업 큐레이션 플랫폼 헤이팝의 팝업 지도 및 소개 서비스입니다.",
			"본 사이트의 프론트엔드와 일부 백엔드, 그리고 관리자 사이트의 프론트엔드와 백엔드를 담당했습니다."
		],
		"contribution_kr": [
			"react-modal-sheet 라이브러리를 기반으로, PC와 모바일 환경에서 공용으로 사용할 수 있는 바텀 시트를 개발했습니다. 유저 인터랙션을 반영하여 터치 방향과 강도를 계산해 바텀 시트의 크기를 3단계로 조절하고, 풀스크린 전환 기능을 구현해 사용자 경험을 향상시켰습니다. 해당 바텀 시트는 컴포넌트화하여 모든 페이지에서 재사용 가능하도록 개발했으며, 페이지 전환 시에도 자연스럽게 연결되도록 조작감을 세밀하게 개선했습니다.",
			"Kakao Maps API를 활용해 관리자가 등록한 위치에 커스텀 팝업 마커를 표시하고, 마커에 데이터를 내장하여 클릭 시 팝업 상세 정보를 동적으로 노출하도록 구현했습니다. 또한, 마커와 모달 외 영역을 클릭 시 모달이 닫히는 기능을 만들고, 유저가 지도를 탐색 중일 때는 모달이 닫히지 않도록 터치/클릭 이벤트를 유연하게 판단하도록 설계했습니다.",
			"프로젝트 시작 단계에서 페이지 구조를 담당하여 모바일과 PC 전환이 자연스럽게 이루어지도록 구조적 차이를 최소화하고, 서로 다른 환경에서도 일관된 조작감을 유지하도록 노력했습니다. 또한, 로딩 중에도 사용자 경험이 어색하지 않도록 모든 페이지에 스켈레톤 UI를 적용하여 서비스의 완성도를 높였습니다.",
			"달력에서 날짜와 지역을 선택해 팝업을 필터링할 수 있는 모달을 개발하고, 이를 처리할 필터링 API를 설계하여 유저의 선택 값을 정제하고 결과를 바텀 시트에 동적으로 표시하도록 구현했습니다.",
			"유저 페이지에서 북마크된 팝업을 검색어로 필터링하고, 드래그 앤 드롭으로 순서를 자유롭게 이동할 수 있는 기능을 개발했습니다. 드래그 이벤트의 상태 관리와 UI 반영으로 사용자의 조작 경험을 개선했습니다.",
			"Admin.js를 사용해 관리자용 웹사이트를 단독으로 설계하고 개발했습니다. Kakao Maps API를 연결해, 주소를 검색하고 지도 미리보기를 제공하는 기능을 추가했습니다. 선택한 주소의 상세 정보를 연관 입력 필드에 자동으로 전달되도록 구현하여 등록 과정의 편의성을 높였습니다.",
			"관리자가 팝업을 등록하고 본 사이트의 메인 화면에 노출할 정보를 직접 설정할 수 있는 기능을 개발했습니다. 유저 블라인드 처리, 게시 상태 관리 등 필수적인 관리자 기능을 구현했고, PostgreSQL 쿼리문을 직접 작성하여 데이터 변경 사항을 실시간으로 반영해 관리 효율성을 높였습니다."
		],
		"review_kr": [
			"단순한 반응형 사이즈 조절을 넘어, PC와 모바일 환경에서 서로 다른 구조로 콘텐츠를 노출해야 했던 복잡한 작업이었습니다. 특히, 지도와 바텀시트처럼 유저의 조작감이 중요한 기능이 많아 자연스럽고 일관된 사용 경험을 제공하는 것이 핵심이었고, 이를 위해 다양한 운영체제와 기기에서 테스트를 진행했습니다. 테스트 과정에서 발생한 문제들을 해결하기 위해 폴리필을 추가하고, 브라우저 별 호환성을 고려해 개선했습니다. 다양한 환경에서의 테스트와 디버깅의 중요성을 깊이 깨닫게 된 프로젝트입니다.",
			"관리자 사이트 개발을 혼자 담당하게 되면서 시간적 제약으로 인해 충분한 리서치 없이 Admin.js를 선택하게 되었습니다. 개발 중, 당시 기준 공식 문서가 부실하고 아웃데이트 되었다는 점을 알게되어 러닝커브가 예상보다 높아 구조 분석에 시간을 많이 쓰게 되었습니다. 결과적으로 PostgreSQL 쿼리를 직접 작성하고 최적화하면서 쿼리 작성 능력을 향상시킬 수 있었던 프로젝트였지만, 기술 스택 선정 시 충분한 리서치와 검토가 필수적임을 다시 느끼게 되었습니다."
		],
		"introduction_en": [
			"HeyMap is a popup curation service provided by Heypop, featuring a map-based interface to introduce popups.",
			"I was in charge of the frontend for the main site and both frontend and backend for the admin panel."
		],
		"contribution_en": [
			"Built a reusable bottom sheet component based on react-modal-sheet that works seamlessly across desktop and mobile. The sheet responds to touch direction and velocity, supporting three height levels and fullscreen mode to improve UX. I also fine-tuned the sheet’s behavior to ensure smooth transitions during page navigation.",
			"Integrated Kakao Maps API to display custom popup markers based on admin input. Clicking a marker reveals dynamic popup details, while clicks outside the modal dismiss it—except during active map interaction, which is detected through flexible touch/click handling.",
			"Designed the page structure from the ground up to minimize layout differences between mobile and desktop, ensuring consistent user interactions across devices. Added skeleton UIs across pages to maintain a polished experience during loading states.",
			"Developed a filter modal that lets users search popups by date and region, along with an API that processes user selections and dynamically updates the bottom sheet with results.",
			"Built a feature for users to filter bookmarked popups by keyword and reorder them via drag-and-drop. Carefully managed drag state and visual feedback to enhance usability.",
			"Solely developed the admin site using Admin.js. Integrated Kakao Maps API for address search and live map preview, automatically syncing address details with related fields to streamline the registration process.",
			"Enabled admins to manage popup listings and control their visibility on the main site. Added features like user content moderation and publish state toggling, and wrote raw PostgreSQL queries to reflect data changes in real time, improving management efficiency."
		],
		"review_en": [
			"This project required presenting different content structures depending on device type. Since many core features like maps and bottom sheets depended heavily on interaction, I focused on delivering a consistent and natural UX. I ran extensive testing across operating systems and browsers, resolving compatibility issues by adding polyfills and optimizing behavior for each environment. It taught me the value of thorough cross-device debugging.",
			"As the sole developer on the admin site, I chose Admin.js under tight deadlines without enough initial research. I later realized the documentation was outdated and lacking, which led to a steep learning curve and extra time spent analyzing its structure. However, writing and optimizing raw PostgreSQL queries greatly improved my querying skills, and the experience reinforced the importance of proper tech stack evaluation."
		],
		"images": ["heymap0.png", "heymap4.png", "heymap1.png", "heymap2.png", "heymap3.png"],
		"ppl_count": 3
	},

	"3": {
		"title": "LocalStorage",
		"subtitle": "Meet Local Artists",
		"thumbnail": "ls_main.png",
		"route": "localstorage/",
		"links": [{"web": "https://localstorage.kr"}],
		"introduction_kr": [
			"동네수장고는 아티스트가 작품을 보관할 수 있는 공간 지원을 매개로 신진 작가를 소개하고 연결하는 플랫폼입니다.",
			"메인 페이지와 미니맵, 게시판 페이지, 소개 페이지, 그리고 어드민 대시보드용 플러그인 개발을 담당했습니다."
		],
		"contribution_kr": [
			"메인 화면에 그리드 맵을 구현하고, 캐릭터와 유저의 위치를 표시하는 미니맵을 개발했습니다. 관리자가 등록한 캐릭터들을 그리드에 배치하고, 배율에 맞춰 위치를 계산해 미니맵에 표시했습니다.",
			"사용자의 현재 화면 크기를 반영하여 유저의 프레임 크기와 현재 스크롤 위치를 미니맵에 동적으로 표시했습니다. 미니맵에서 프레임을 드래그하면 배율에 맞춰 실제 유저 화면이 이동하도록 구현하여 사용자 네비게이션의 편의성을 높였습니다.",
			"Vue.js를 사용하여 커스텀 Wordpress 어드민 플러그인을 개발했습니다. 관리자 페이지에서 그리드 영역을 선택하여 캐릭터 선택을 트리거하고 재선택시 삭제하는 맵 관리 페이지를 만들었습니다. 배치된 캐릭터의 정보와 위치를 db에 저장하는 wordpress 액션과 mysql 쿼리문을 구현했습니다."
		],
		"review_kr": [
			"독특한 웹사이트 디자인이 흥미로워 직접 구현해보고 싶어 가장 기능이 많은 메인 화면을 담당했습니다. 넓은 그리드 위에 배치된 캐릭터와 반응형으로 변하는 뷰포트를 정교하게 매핑하는 미니맵 기능을 구현하기 위해 수식 계산과 최적화에 많은 시간을 투자했습니다. 높은 책임감으로 프로젝트를 주도한 경험이 값진 프로젝트였습니다."
		],
		"introduction_en": [
			"Local Storage is a platform that supports emerging local artists by providing storage space for their works and creating opportunities for connection and exposure.",
			"I was responsible for developing the main page, minimap, board and introduction pages, as well as a custom admin dashboard plugin."
		],
		"contribution_en": [
			"Built a grid map for the main page and developed a minimap to show character and user positions. Characters registered by the admin were rendered on the grid, and their coordinates were dynamically calculated and displayed on the minimap based on scale.",
			"Reflected the user’s current screen size by dynamically displaying their viewport frame and scroll position on the minimap. Implemented a drag-to-navigate feature where moving the frame on the minimap adjusts the actual screen position accordingly, improving usability.",
			"Developed a custom WordPress admin plugin using Vue.js. Built a map management page where admins could select grid areas to place characters and re-select to remove them. Saved character data and position info to the database using WordPress actions and custom MySQL queries."
		],
		"review_en": [
			"I was drawn to the unique web design of the project and asked to be in charge of the main page, which essentially represented the identity of the website and contained the most complex features. Mapping responsive viewports and grid-based characters onto a precise, interactive minimap required detailed calculations and optimization. Taking full ownership of the main interaction flow made this a deeply rewarding project."
		],
		"tags": ["WORK", "TEAM", "WEB"],
		"images": ["ls3.png", "ls0.png", "ls1.png", "lsvid1.mp4"],
		"theme": "#8bf337",
		"stacks": ["php", "wordpress", "jquery", "mysql", "css3"],
		"ppl_count": 4
	},
	"4": {
		"title": "Workmate",
		"subtitle": "Retro Music Player",
		"thumbnail": "workmate_main.png",
		"route": "workmate/",
		"links": [{"code": "https://github.com/seoeongeueun/workmate2", "web": "https://workmatebeta.vercel.app"}],
		"tags": ["1 DEV", "PERSONAL", "WEB", "STANDALONE"],
		"theme": "#404076",
		"stacks": ["typescript", "nextjs2", "electron", "mongodb", "tailwindcss"],
		"ppl_count": 1,
		"images": ["workmate6.png", "workmate1.png", "workmate2.png", "workmate3.png", "workmate4.png", "workmate5.png"],
		"introduction_kr": [
			"Workmate는 순수 CSS로 구현한 실제같은 게임기 UI의 유튜브 기반 커스텀 뮤직 플레이어입니다.",
			"혼자 작업한 프로젝트이며 웹 서비스와 데스크톱 애플리케이션을 모두 지원합니다."
		],
		"contribution_kr": [
			"유저가 유튜브 주소를 입력하면 Youtube API를 통해 유저가 입력한 유튜브 주소를 검증하고 임베드하는 플레이리스트 기능을 만들었습니다. Youtube API policy에 따라 Youtube API를 활용해서 만들면 안되는 기능과, 필수적으로 추가해야하는 기능 규칙을 준수합니다.",
			"동영상 주소의 metadata를 읽어 제목을 자동으로 추가하고, 일반적인 플레이리스트에 필요한 재생/멈춤/스킵/음소거/셔플 등의 기본 기능을 구현했습니다.",
			"SCSS와 Tailwind CSS를 활용해 닌텐도 Gameboy 쉐입을 CSS만으로 만들었습니다. 전원 버튼을 눌러 화면을 켜고, 마우스 호버시 버튼이 눌리는 효과 등 실제 게임기와 동일한 조작감을 구현했습니다.",
			"Iron Session으로 로그인과 세션을 유지합니다. 유저별로 플레이리스트를 db에 저장하고 곡 추가/삭제 등 변경 사항을 db에 동기화합니다. 로그인 시 npc 대화창과 함께 선택지 기반 맞춤 스페셜 곡을 재생하는 재미 요소를 더했습니다.",
			"Next.js 기반 프로젝트를 Electron으로 standalone 애플리케이션으로 (dmg/exe) 빌드하여 IPC 통신 기반 독립 실행 파일을 제공합니다. Express.js로 내부 서버를 가동하고 창 항상 위에 띄우기 기능 같은 데스크톱 맞춤 기능을 추가했습니다."
		],
		"review_kr": [
			"웹 & 데스크톱 통합을 위해 Next.js 기반 프로젝트를 Electron 으로 패킹하면서 ",
			"복잡하고 디테일한 게임기의 완성도 높은 구현을 위해 다양한 css 설정을 탐구하고 적용해볼 수 있었습니다."
		],
		"introduction_en": [
			"Workmate is a Youtube based custom music player with a retro game console UI built entirely with pure CSS.",
			"It’s a solo project that supports both web and standalone desktop versions."
		],
		"contribution_en": [
			"Implemented a playlist feature where users can input YouTube URLs, which are validated and embedded using the YouTube API. The implementation follows YouTube’s policy guidelines, ensuring that restricted features are avoided and required functionalities are included.",
			"Fetched video metadata to auto-fill song titles, and implemented core playlist features like play, pause, skip, mute, and shuffle.",
			"Recreated a Nintendo Gameboy-style interface using only SCSS and Tailwind CSS. Simulated physical interactions such as powering on the screen and clickable buttons with hover effects, replicating the tactile feel of a real console.",
			"Used Iron Session to manage login and session persistence. Each user's playlist is stored and synced to the database in real time. Added a fun touch: after logging in, users are greeted by an NPC dialogue box and given a choice-based interaction that triggers a special song.",
			"Packaged the Next.js-based web app as a standalone desktop application using Electron (dmg/exe), with IPC-based communication. Ran an internal Express.js server and added desktop-friendly features like 'always-on-top' window mode."
		],
		"review_en": [
			"To support both web and desktop, I packaged the Next.js app with Electron, learning how to manage IPC and desktop-specific features in the process.",
			"Recreating the detailed look and feel of a retro game console with pure CSS challenged me to explore and apply a variety of advanced styling techniques. It pushed my attention to design detail and gave me a chance to polish small interactions that made the UI feel alive."
		],
		"dark": true
	},
	"5": {
		"title": "Portfolio",
		"subtitle": "Portfolio Renewal",
		"thumbnail": "portfolio_main.png",
		"tags": ["1 DEV", "PERSONAL", "WEB"],
		"route": "po/",
		"theme": "#2febf1",
		"stacks": ["typescript", "nextjs2", "tailwindcss"],
		"links": [{"code": "https://github.com/seoeongeueun/portfolio.v2", "old": "https://workmatebeta.vercel.app"}],
		"introduction_kr": ["3년 전에 만든 포트폴리오의 게임 컨셉을 일부 유지하며 사용자 경험과 가독성을 중심으로 리뉴얼한 새로운 포트폴리오입니다."],
		"contribution_kr": [
			"기존 Redux 기반 점수 시스템과 미니 게임을 제거하고 섹션별로 새로운 GSAP 기반 스크롤 애니메이션을 구현하여 다른 재미 요소를 더했습니다. 브라우저 기본 API와 유틸 메서드를 활용해 성능 최적화에 중점을 두었습니다.",
			"Career 섹션에서 Canvas에 현재 DOM을 캡처하고, 픽셀 단위로 분해한 후 GSAP을 이용해 스크롤 타이밍에 맞춰 흩어지게 만드는 픽셀화 효과를 구현하여 기존 레트로 컨셉과 자연스럽게 이어지게 구성하였습니다.  모바일 환경에서는 성능을 고려해 GSAP 대신 가벼운 별도 애니메이션을 적용했습니다.",
			"프로젝트 선택 섹션에서는 스크롤 위치와 카트리지 위치를 동적으로 계산해 모든 케이스에 대응하는 중앙 정렬 애니메이션을 구현했습니다. 스크롤과 직접 위치 이동 하이브리드 방식에서 발생할 수 있는 레이아웃 타이밍 문제와 transform 충돌 이슈를 최소화하기 위해, reflow 처리, 애니메이션 이벤트 기반 흐름 제어 등을 활용해 최적화했습니다.",
			"프로젝트 상세 페이지에서는 Swiper의 첫 번째 슬라이드가 로드 되었는지 체크한 후에 페이지 전환이 일어나고, 로드 실패시에는 fallback 처리로 자연스러운 전환 흐름을 구현했습니다"
		],
		"review_kr": [
			"오래된 포트폴리오를 수정하는 것으로 시작했지만, 전반적인 아키텍처와 성능, 사용자 경험을 고려해 결과적으로 새롭게 재설계한 프로젝트가 되었습니다. 서로 촘촘히 연결된 연속 애니메이션을 구현하면서 운영체제와 기기마다 동작 방식이 달라 결국 애니메이션 단계를 간소화해 적용했고, 앞으로도 그 간극을 줄이기 위해 시간을 들여 개선해 나가고자 합니다.",
			"추가하고 싶은 기능이 많았지만 덜어내고 핵심 기능에 집중하는 방향을 선택했고, GSAP과 Canvas를 활용한 애니메이션, 렌더링 최적화 등 과거에는 적용하지 않았던 기능을 구현하면서 그 동안의 성장 과정을 돌아볼 수 있었던 작업이었습니다."
		],
		"introduction_en": [
			"This is a renewed version of my portfolio, rebuilt with a focus on user experience and readability, while retaining elements of the original game-inspired concept I created three years ago."
		],
		"contribution_en": [
			"Removed the old Redux-based score system and mini-games, and replaced them with section-specific scroll animations built using GSAP. Focused on performance optimization through browser-native APIs and utility methods.",
			"In the Career section, I captured the current DOM into a Canvas, broke it down into pixel units, and applied a GSAP-powered pixel dispersion effect synced with scroll timing—blending naturally into the retro aesthetic. For mobile devices, a lighter, alternative animation was used to ensure better performance.",
			"For the project selection section, I implemented a scroll-and-snap animation that calculates the scroll position and cartridge alignment in real-time to ensure perfect centering across all cases. Addressed layout timing issues and transform conflicts by using reflow strategies and animation event-based flow control.",
			"On the project detail page, I added logic to detect whether the first Swiper slide has loaded before triggering a page transition. If loading fails, a fallback ensures a smooth transition experience."
		],
		"review_en": [
			"It started as a simple update to my old portfolio, but I ended up completely redesigning it, considering architecture, performance, and user experience from the ground up. Due to inconsistent behavior across devices and OS, I ended up simplifying the animation flow and plan to keep improving it to minimize the differences over time.",
			"Although I had many ideas I wanted to add, I chose to strip things down and focus on the core. By implementing features like GSAP + Canvas animations and render optimization techniques I hadn’t used before, this project became a reflection of how much I’ve grown as a developer."
		],
		"ppl_count": 1,
		"images": ["po0.png", "po1.png", "po3.png", "po2.png", "po4.png"]
	},
	"6": {
		"title": "...And More!",
		"subtitle": "Other Projects",
		"thumbnail": "other_main.png",
		"route": "etc/",
		"tags": ["TEAM", "WORK", "WEB"],
		"links": [{"baton": "https://ba-ton.kr", "josun": "https://josuntns.josunhotel.com/", "impact": "https://impact.career"}],
		"theme": "#4b212a",
		"stacks": ["typescript", "js", "nextjs2", "reactjs", "playwright", "cypress", "css3", "html5", "mysql", "docker"],
		"introduction_kr": ["이 외에도 임팩트 닷 커리어, 조선 테이스트 & 스타일, 바톤 홈페이지 등 다양한 프로젝트에 참여했습니다."],
		"contribution_kr": [
			"[바톤 홈페이지] Next.js 기반 회사 웹사이트를 단독으로 개발했습니다. 기획 단계부터 참여해 프로토타입부터 최종 사이트까지 다양한 버전을 구현했으며, 마우스 패럴럭스 효과와 자연스러운 페이지 전환에 중점을 두고 e2e 테스트를 도입해 완성도를 높였습니다.",
			"[조선 테이스트 & 스타일] Cafe24 기반 조선 호텔 쇼핑몰의 메인 페이지와 마이페이지를 작업했습니다. Next.js 기반 관리자 사이트의 이미지 연동 기능과 유저 정보 암호화/복호화 백엔드 로직을 구현했습니다.",
			"[임팩트 닷 커리어] Php와 jQuery 기반 메인 페이지, 커뮤니티 페이지, 그리고 소개 페이지의 일부 영역을 작업했습니다. IntersectionObserver를 사용해 스크롤 위치에 따라 진행되는 다양한 애니메이션 구현하고 성능 최적화를 진행했습니다."
		],
		"introduction_en": ["Other projects I’ve contributed to include Impact.Career, Josun Taste & Style, and the official website for BATON."],
		"contribution_en": [
			"[BATON Website] Developed the company website independently using Next.js. I was involved from the planning stage and built multiple versions, from prototype to final release. Focused on smooth page transitions and mouse-based parallax effects, and added e2e testing to improve reliability.",
			"[Josun Taste & Style] Worked on the main and My Page sections of Josun Hotel's shopping site built with Cafe24. On the separately built Next.js admin panel, I implemented image integration features and backend logic for encrypting and decrypting user information.",
			"[Impact.Career] Contributed to parts of the main, community, and about pages on a PHP and jQuery-based platform. Used IntersectionObserver to build scroll-triggered animations and focused on performance optimization."
		],
		"images": ["etc0.png", "etc6.png", "etc3.png", "etc4.png", "etc2.png", "etc5.png"],
		"ppl_count": 5,
		"dark": true
	}
}
